
Timer0AsCounter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000078c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  00000800  2**0
                  ALLOC
  2 .stab         00000b10  00000000  00000000  00000800  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000008f5  00000000  00000000  00001310  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 81 03 	jmp	0x702	; 0x702 <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 bd 03 	call	0x77a	; 0x77a <main>
  74:	0c 94 c4 03 	jmp	0x788	; 0x788 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <Dio_SetPinDirection>:
#include "Dio_Reg.h"
#include "Dio_Int.h"
#include "Utilities.h"

void Dio_SetPinDirection(u8 GroupNo, u8 PinNo, u8 Direction)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
  84:	27 97       	sbiw	r28, 0x07	; 7
  86:	0f b6       	in	r0, 0x3f	; 63
  88:	f8 94       	cli
  8a:	de bf       	out	0x3e, r29	; 62
  8c:	0f be       	out	0x3f, r0	; 63
  8e:	cd bf       	out	0x3d, r28	; 61
  90:	89 83       	std	Y+1, r24	; 0x01
  92:	6a 83       	std	Y+2, r22	; 0x02
  94:	4b 83       	std	Y+3, r20	; 0x03
	if((GroupNo<=GroupD)&&(PinNo<=PIN7))
  96:	89 81       	ldd	r24, Y+1	; 0x01
  98:	84 30       	cpi	r24, 0x04	; 4
  9a:	08 f0       	brcs	.+2      	; 0x9e <Dio_SetPinDirection+0x22>
  9c:	ed c0       	rjmp	.+474    	; 0x278 <Dio_SetPinDirection+0x1fc>
  9e:	8a 81       	ldd	r24, Y+2	; 0x02
  a0:	88 30       	cpi	r24, 0x08	; 8
  a2:	08 f0       	brcs	.+2      	; 0xa6 <Dio_SetPinDirection+0x2a>
  a4:	e9 c0       	rjmp	.+466    	; 0x278 <Dio_SetPinDirection+0x1fc>
	{
	if(Direction==INPUT)
  a6:	8b 81       	ldd	r24, Y+3	; 0x03
  a8:	88 23       	and	r24, r24
  aa:	09 f0       	breq	.+2      	; 0xae <Dio_SetPinDirection+0x32>
  ac:	73 c0       	rjmp	.+230    	; 0x194 <Dio_SetPinDirection+0x118>
	{
		switch(GroupNo)
  ae:	89 81       	ldd	r24, Y+1	; 0x01
  b0:	28 2f       	mov	r18, r24
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	3f 83       	std	Y+7, r19	; 0x07
  b6:	2e 83       	std	Y+6, r18	; 0x06
  b8:	8e 81       	ldd	r24, Y+6	; 0x06
  ba:	9f 81       	ldd	r25, Y+7	; 0x07
  bc:	81 30       	cpi	r24, 0x01	; 1
  be:	91 05       	cpc	r25, r1
  c0:	59 f1       	breq	.+86     	; 0x118 <Dio_SetPinDirection+0x9c>
  c2:	2e 81       	ldd	r18, Y+6	; 0x06
  c4:	3f 81       	ldd	r19, Y+7	; 0x07
  c6:	22 30       	cpi	r18, 0x02	; 2
  c8:	31 05       	cpc	r19, r1
  ca:	2c f4       	brge	.+10     	; 0xd6 <Dio_SetPinDirection+0x5a>
  cc:	8e 81       	ldd	r24, Y+6	; 0x06
  ce:	9f 81       	ldd	r25, Y+7	; 0x07
  d0:	00 97       	sbiw	r24, 0x00	; 0
  d2:	69 f0       	breq	.+26     	; 0xee <Dio_SetPinDirection+0x72>
  d4:	5f c0       	rjmp	.+190    	; 0x194 <Dio_SetPinDirection+0x118>
  d6:	2e 81       	ldd	r18, Y+6	; 0x06
  d8:	3f 81       	ldd	r19, Y+7	; 0x07
  da:	22 30       	cpi	r18, 0x02	; 2
  dc:	31 05       	cpc	r19, r1
  de:	89 f1       	breq	.+98     	; 0x142 <Dio_SetPinDirection+0xc6>
  e0:	8e 81       	ldd	r24, Y+6	; 0x06
  e2:	9f 81       	ldd	r25, Y+7	; 0x07
  e4:	83 30       	cpi	r24, 0x03	; 3
  e6:	91 05       	cpc	r25, r1
  e8:	09 f4       	brne	.+2      	; 0xec <Dio_SetPinDirection+0x70>
  ea:	40 c0       	rjmp	.+128    	; 0x16c <Dio_SetPinDirection+0xf0>
  ec:	53 c0       	rjmp	.+166    	; 0x194 <Dio_SetPinDirection+0x118>
		{
		case GroupA: CLR_BIT(DDRA, PinNo); break;
  ee:	aa e3       	ldi	r26, 0x3A	; 58
  f0:	b0 e0       	ldi	r27, 0x00	; 0
  f2:	ea e3       	ldi	r30, 0x3A	; 58
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	48 2f       	mov	r20, r24
  fa:	8a 81       	ldd	r24, Y+2	; 0x02
  fc:	28 2f       	mov	r18, r24
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 2e       	mov	r0, r18
 106:	02 c0       	rjmp	.+4      	; 0x10c <Dio_SetPinDirection+0x90>
 108:	88 0f       	add	r24, r24
 10a:	99 1f       	adc	r25, r25
 10c:	0a 94       	dec	r0
 10e:	e2 f7       	brpl	.-8      	; 0x108 <Dio_SetPinDirection+0x8c>
 110:	80 95       	com	r24
 112:	84 23       	and	r24, r20
 114:	8c 93       	st	X, r24
 116:	3e c0       	rjmp	.+124    	; 0x194 <Dio_SetPinDirection+0x118>
		case GroupB: CLR_BIT(DDRB, PinNo); break;
 118:	a7 e3       	ldi	r26, 0x37	; 55
 11a:	b0 e0       	ldi	r27, 0x00	; 0
 11c:	e7 e3       	ldi	r30, 0x37	; 55
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	48 2f       	mov	r20, r24
 124:	8a 81       	ldd	r24, Y+2	; 0x02
 126:	28 2f       	mov	r18, r24
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	02 2e       	mov	r0, r18
 130:	02 c0       	rjmp	.+4      	; 0x136 <Dio_SetPinDirection+0xba>
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	0a 94       	dec	r0
 138:	e2 f7       	brpl	.-8      	; 0x132 <Dio_SetPinDirection+0xb6>
 13a:	80 95       	com	r24
 13c:	84 23       	and	r24, r20
 13e:	8c 93       	st	X, r24
 140:	29 c0       	rjmp	.+82     	; 0x194 <Dio_SetPinDirection+0x118>
		case GroupC: CLR_BIT(DDRC, PinNo); break;
 142:	a4 e3       	ldi	r26, 0x34	; 52
 144:	b0 e0       	ldi	r27, 0x00	; 0
 146:	e4 e3       	ldi	r30, 0x34	; 52
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	80 81       	ld	r24, Z
 14c:	48 2f       	mov	r20, r24
 14e:	8a 81       	ldd	r24, Y+2	; 0x02
 150:	28 2f       	mov	r18, r24
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	02 2e       	mov	r0, r18
 15a:	02 c0       	rjmp	.+4      	; 0x160 <Dio_SetPinDirection+0xe4>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	0a 94       	dec	r0
 162:	e2 f7       	brpl	.-8      	; 0x15c <Dio_SetPinDirection+0xe0>
 164:	80 95       	com	r24
 166:	84 23       	and	r24, r20
 168:	8c 93       	st	X, r24
 16a:	14 c0       	rjmp	.+40     	; 0x194 <Dio_SetPinDirection+0x118>
		case GroupD: CLR_BIT(DDRD, PinNo); break;
 16c:	a1 e3       	ldi	r26, 0x31	; 49
 16e:	b0 e0       	ldi	r27, 0x00	; 0
 170:	e1 e3       	ldi	r30, 0x31	; 49
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	48 2f       	mov	r20, r24
 178:	8a 81       	ldd	r24, Y+2	; 0x02
 17a:	28 2f       	mov	r18, r24
 17c:	30 e0       	ldi	r19, 0x00	; 0
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	02 2e       	mov	r0, r18
 184:	02 c0       	rjmp	.+4      	; 0x18a <Dio_SetPinDirection+0x10e>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	0a 94       	dec	r0
 18c:	e2 f7       	brpl	.-8      	; 0x186 <Dio_SetPinDirection+0x10a>
 18e:	80 95       	com	r24
 190:	84 23       	and	r24, r20
 192:	8c 93       	st	X, r24
		}
	}
	if(Direction==OUTPUT)
 194:	8b 81       	ldd	r24, Y+3	; 0x03
 196:	81 30       	cpi	r24, 0x01	; 1
 198:	09 f0       	breq	.+2      	; 0x19c <Dio_SetPinDirection+0x120>
 19a:	6e c0       	rjmp	.+220    	; 0x278 <Dio_SetPinDirection+0x1fc>
	{
		switch(GroupNo)
 19c:	89 81       	ldd	r24, Y+1	; 0x01
 19e:	28 2f       	mov	r18, r24
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	3d 83       	std	Y+5, r19	; 0x05
 1a4:	2c 83       	std	Y+4, r18	; 0x04
 1a6:	8c 81       	ldd	r24, Y+4	; 0x04
 1a8:	9d 81       	ldd	r25, Y+5	; 0x05
 1aa:	81 30       	cpi	r24, 0x01	; 1
 1ac:	91 05       	cpc	r25, r1
 1ae:	49 f1       	breq	.+82     	; 0x202 <Dio_SetPinDirection+0x186>
 1b0:	2c 81       	ldd	r18, Y+4	; 0x04
 1b2:	3d 81       	ldd	r19, Y+5	; 0x05
 1b4:	22 30       	cpi	r18, 0x02	; 2
 1b6:	31 05       	cpc	r19, r1
 1b8:	2c f4       	brge	.+10     	; 0x1c4 <Dio_SetPinDirection+0x148>
 1ba:	8c 81       	ldd	r24, Y+4	; 0x04
 1bc:	9d 81       	ldd	r25, Y+5	; 0x05
 1be:	00 97       	sbiw	r24, 0x00	; 0
 1c0:	61 f0       	breq	.+24     	; 0x1da <Dio_SetPinDirection+0x15e>
 1c2:	5a c0       	rjmp	.+180    	; 0x278 <Dio_SetPinDirection+0x1fc>
 1c4:	2c 81       	ldd	r18, Y+4	; 0x04
 1c6:	3d 81       	ldd	r19, Y+5	; 0x05
 1c8:	22 30       	cpi	r18, 0x02	; 2
 1ca:	31 05       	cpc	r19, r1
 1cc:	71 f1       	breq	.+92     	; 0x22a <Dio_SetPinDirection+0x1ae>
 1ce:	8c 81       	ldd	r24, Y+4	; 0x04
 1d0:	9d 81       	ldd	r25, Y+5	; 0x05
 1d2:	83 30       	cpi	r24, 0x03	; 3
 1d4:	91 05       	cpc	r25, r1
 1d6:	e9 f1       	breq	.+122    	; 0x252 <Dio_SetPinDirection+0x1d6>
 1d8:	4f c0       	rjmp	.+158    	; 0x278 <Dio_SetPinDirection+0x1fc>
		{
		case GroupA: SET_BIT(DDRA, PinNo); break;
 1da:	aa e3       	ldi	r26, 0x3A	; 58
 1dc:	b0 e0       	ldi	r27, 0x00	; 0
 1de:	ea e3       	ldi	r30, 0x3A	; 58
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	48 2f       	mov	r20, r24
 1e6:	8a 81       	ldd	r24, Y+2	; 0x02
 1e8:	28 2f       	mov	r18, r24
 1ea:	30 e0       	ldi	r19, 0x00	; 0
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 2e       	mov	r0, r18
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <Dio_SetPinDirection+0x17c>
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	0a 94       	dec	r0
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <Dio_SetPinDirection+0x178>
 1fc:	84 2b       	or	r24, r20
 1fe:	8c 93       	st	X, r24
 200:	3b c0       	rjmp	.+118    	; 0x278 <Dio_SetPinDirection+0x1fc>
		case GroupB: SET_BIT(DDRB, PinNo); break;
 202:	a7 e3       	ldi	r26, 0x37	; 55
 204:	b0 e0       	ldi	r27, 0x00	; 0
 206:	e7 e3       	ldi	r30, 0x37	; 55
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	80 81       	ld	r24, Z
 20c:	48 2f       	mov	r20, r24
 20e:	8a 81       	ldd	r24, Y+2	; 0x02
 210:	28 2f       	mov	r18, r24
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	02 2e       	mov	r0, r18
 21a:	02 c0       	rjmp	.+4      	; 0x220 <Dio_SetPinDirection+0x1a4>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	0a 94       	dec	r0
 222:	e2 f7       	brpl	.-8      	; 0x21c <Dio_SetPinDirection+0x1a0>
 224:	84 2b       	or	r24, r20
 226:	8c 93       	st	X, r24
 228:	27 c0       	rjmp	.+78     	; 0x278 <Dio_SetPinDirection+0x1fc>
		case GroupC: SET_BIT(DDRC, PinNo); break;
 22a:	a4 e3       	ldi	r26, 0x34	; 52
 22c:	b0 e0       	ldi	r27, 0x00	; 0
 22e:	e4 e3       	ldi	r30, 0x34	; 52
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	80 81       	ld	r24, Z
 234:	48 2f       	mov	r20, r24
 236:	8a 81       	ldd	r24, Y+2	; 0x02
 238:	28 2f       	mov	r18, r24
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	02 2e       	mov	r0, r18
 242:	02 c0       	rjmp	.+4      	; 0x248 <Dio_SetPinDirection+0x1cc>
 244:	88 0f       	add	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	0a 94       	dec	r0
 24a:	e2 f7       	brpl	.-8      	; 0x244 <Dio_SetPinDirection+0x1c8>
 24c:	84 2b       	or	r24, r20
 24e:	8c 93       	st	X, r24
 250:	13 c0       	rjmp	.+38     	; 0x278 <Dio_SetPinDirection+0x1fc>
		case GroupD: SET_BIT(DDRD, PinNo); break;
 252:	a1 e3       	ldi	r26, 0x31	; 49
 254:	b0 e0       	ldi	r27, 0x00	; 0
 256:	e1 e3       	ldi	r30, 0x31	; 49
 258:	f0 e0       	ldi	r31, 0x00	; 0
 25a:	80 81       	ld	r24, Z
 25c:	48 2f       	mov	r20, r24
 25e:	8a 81       	ldd	r24, Y+2	; 0x02
 260:	28 2f       	mov	r18, r24
 262:	30 e0       	ldi	r19, 0x00	; 0
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	02 2e       	mov	r0, r18
 26a:	02 c0       	rjmp	.+4      	; 0x270 <Dio_SetPinDirection+0x1f4>
 26c:	88 0f       	add	r24, r24
 26e:	99 1f       	adc	r25, r25
 270:	0a 94       	dec	r0
 272:	e2 f7       	brpl	.-8      	; 0x26c <Dio_SetPinDirection+0x1f0>
 274:	84 2b       	or	r24, r20
 276:	8c 93       	st	X, r24
	else
	{
		//not reachable
	}

}
 278:	27 96       	adiw	r28, 0x07	; 7
 27a:	0f b6       	in	r0, 0x3f	; 63
 27c:	f8 94       	cli
 27e:	de bf       	out	0x3e, r29	; 62
 280:	0f be       	out	0x3f, r0	; 63
 282:	cd bf       	out	0x3d, r28	; 61
 284:	cf 91       	pop	r28
 286:	df 91       	pop	r29
 288:	08 95       	ret

0000028a <Dio_SetPinValue>:
void Dio_SetPinValue(u8 GroupNo, u8 PinNo, u8 Value)
{
 28a:	df 93       	push	r29
 28c:	cf 93       	push	r28
 28e:	cd b7       	in	r28, 0x3d	; 61
 290:	de b7       	in	r29, 0x3e	; 62
 292:	27 97       	sbiw	r28, 0x07	; 7
 294:	0f b6       	in	r0, 0x3f	; 63
 296:	f8 94       	cli
 298:	de bf       	out	0x3e, r29	; 62
 29a:	0f be       	out	0x3f, r0	; 63
 29c:	cd bf       	out	0x3d, r28	; 61
 29e:	89 83       	std	Y+1, r24	; 0x01
 2a0:	6a 83       	std	Y+2, r22	; 0x02
 2a2:	4b 83       	std	Y+3, r20	; 0x03
	if(Value==LOW)
 2a4:	8b 81       	ldd	r24, Y+3	; 0x03
 2a6:	88 23       	and	r24, r24
 2a8:	09 f0       	breq	.+2      	; 0x2ac <Dio_SetPinValue+0x22>
 2aa:	73 c0       	rjmp	.+230    	; 0x392 <Dio_SetPinValue+0x108>
		{
			switch(GroupNo)
 2ac:	89 81       	ldd	r24, Y+1	; 0x01
 2ae:	28 2f       	mov	r18, r24
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	3f 83       	std	Y+7, r19	; 0x07
 2b4:	2e 83       	std	Y+6, r18	; 0x06
 2b6:	8e 81       	ldd	r24, Y+6	; 0x06
 2b8:	9f 81       	ldd	r25, Y+7	; 0x07
 2ba:	81 30       	cpi	r24, 0x01	; 1
 2bc:	91 05       	cpc	r25, r1
 2be:	59 f1       	breq	.+86     	; 0x316 <Dio_SetPinValue+0x8c>
 2c0:	2e 81       	ldd	r18, Y+6	; 0x06
 2c2:	3f 81       	ldd	r19, Y+7	; 0x07
 2c4:	22 30       	cpi	r18, 0x02	; 2
 2c6:	31 05       	cpc	r19, r1
 2c8:	2c f4       	brge	.+10     	; 0x2d4 <Dio_SetPinValue+0x4a>
 2ca:	8e 81       	ldd	r24, Y+6	; 0x06
 2cc:	9f 81       	ldd	r25, Y+7	; 0x07
 2ce:	00 97       	sbiw	r24, 0x00	; 0
 2d0:	69 f0       	breq	.+26     	; 0x2ec <Dio_SetPinValue+0x62>
 2d2:	5f c0       	rjmp	.+190    	; 0x392 <Dio_SetPinValue+0x108>
 2d4:	2e 81       	ldd	r18, Y+6	; 0x06
 2d6:	3f 81       	ldd	r19, Y+7	; 0x07
 2d8:	22 30       	cpi	r18, 0x02	; 2
 2da:	31 05       	cpc	r19, r1
 2dc:	89 f1       	breq	.+98     	; 0x340 <Dio_SetPinValue+0xb6>
 2de:	8e 81       	ldd	r24, Y+6	; 0x06
 2e0:	9f 81       	ldd	r25, Y+7	; 0x07
 2e2:	83 30       	cpi	r24, 0x03	; 3
 2e4:	91 05       	cpc	r25, r1
 2e6:	09 f4       	brne	.+2      	; 0x2ea <Dio_SetPinValue+0x60>
 2e8:	40 c0       	rjmp	.+128    	; 0x36a <Dio_SetPinValue+0xe0>
 2ea:	53 c0       	rjmp	.+166    	; 0x392 <Dio_SetPinValue+0x108>
			{
			case GroupA: CLR_BIT(PORTA, PinNo); break;
 2ec:	ab e3       	ldi	r26, 0x3B	; 59
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	eb e3       	ldi	r30, 0x3B	; 59
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	48 2f       	mov	r20, r24
 2f8:	8a 81       	ldd	r24, Y+2	; 0x02
 2fa:	28 2f       	mov	r18, r24
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	02 2e       	mov	r0, r18
 304:	02 c0       	rjmp	.+4      	; 0x30a <Dio_SetPinValue+0x80>
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	0a 94       	dec	r0
 30c:	e2 f7       	brpl	.-8      	; 0x306 <Dio_SetPinValue+0x7c>
 30e:	80 95       	com	r24
 310:	84 23       	and	r24, r20
 312:	8c 93       	st	X, r24
 314:	3e c0       	rjmp	.+124    	; 0x392 <Dio_SetPinValue+0x108>
			case GroupB: CLR_BIT(PORTB, PinNo); break;
 316:	a8 e3       	ldi	r26, 0x38	; 56
 318:	b0 e0       	ldi	r27, 0x00	; 0
 31a:	e8 e3       	ldi	r30, 0x38	; 56
 31c:	f0 e0       	ldi	r31, 0x00	; 0
 31e:	80 81       	ld	r24, Z
 320:	48 2f       	mov	r20, r24
 322:	8a 81       	ldd	r24, Y+2	; 0x02
 324:	28 2f       	mov	r18, r24
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	02 2e       	mov	r0, r18
 32e:	02 c0       	rjmp	.+4      	; 0x334 <Dio_SetPinValue+0xaa>
 330:	88 0f       	add	r24, r24
 332:	99 1f       	adc	r25, r25
 334:	0a 94       	dec	r0
 336:	e2 f7       	brpl	.-8      	; 0x330 <Dio_SetPinValue+0xa6>
 338:	80 95       	com	r24
 33a:	84 23       	and	r24, r20
 33c:	8c 93       	st	X, r24
 33e:	29 c0       	rjmp	.+82     	; 0x392 <Dio_SetPinValue+0x108>
			case GroupC: CLR_BIT(PORTC, PinNo); break;
 340:	a5 e3       	ldi	r26, 0x35	; 53
 342:	b0 e0       	ldi	r27, 0x00	; 0
 344:	e5 e3       	ldi	r30, 0x35	; 53
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	80 81       	ld	r24, Z
 34a:	48 2f       	mov	r20, r24
 34c:	8a 81       	ldd	r24, Y+2	; 0x02
 34e:	28 2f       	mov	r18, r24
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	02 2e       	mov	r0, r18
 358:	02 c0       	rjmp	.+4      	; 0x35e <Dio_SetPinValue+0xd4>
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	0a 94       	dec	r0
 360:	e2 f7       	brpl	.-8      	; 0x35a <Dio_SetPinValue+0xd0>
 362:	80 95       	com	r24
 364:	84 23       	and	r24, r20
 366:	8c 93       	st	X, r24
 368:	14 c0       	rjmp	.+40     	; 0x392 <Dio_SetPinValue+0x108>
			case GroupD: CLR_BIT(PORTD, PinNo); break;
 36a:	a2 e3       	ldi	r26, 0x32	; 50
 36c:	b0 e0       	ldi	r27, 0x00	; 0
 36e:	e2 e3       	ldi	r30, 0x32	; 50
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	80 81       	ld	r24, Z
 374:	48 2f       	mov	r20, r24
 376:	8a 81       	ldd	r24, Y+2	; 0x02
 378:	28 2f       	mov	r18, r24
 37a:	30 e0       	ldi	r19, 0x00	; 0
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	90 e0       	ldi	r25, 0x00	; 0
 380:	02 2e       	mov	r0, r18
 382:	02 c0       	rjmp	.+4      	; 0x388 <Dio_SetPinValue+0xfe>
 384:	88 0f       	add	r24, r24
 386:	99 1f       	adc	r25, r25
 388:	0a 94       	dec	r0
 38a:	e2 f7       	brpl	.-8      	; 0x384 <Dio_SetPinValue+0xfa>
 38c:	80 95       	com	r24
 38e:	84 23       	and	r24, r20
 390:	8c 93       	st	X, r24
			}
		}
		if(Value==HIGH)
 392:	8b 81       	ldd	r24, Y+3	; 0x03
 394:	81 30       	cpi	r24, 0x01	; 1
 396:	09 f0       	breq	.+2      	; 0x39a <Dio_SetPinValue+0x110>
 398:	6e c0       	rjmp	.+220    	; 0x476 <Dio_SetPinValue+0x1ec>
		{
			switch(GroupNo)
 39a:	89 81       	ldd	r24, Y+1	; 0x01
 39c:	28 2f       	mov	r18, r24
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	3d 83       	std	Y+5, r19	; 0x05
 3a2:	2c 83       	std	Y+4, r18	; 0x04
 3a4:	8c 81       	ldd	r24, Y+4	; 0x04
 3a6:	9d 81       	ldd	r25, Y+5	; 0x05
 3a8:	81 30       	cpi	r24, 0x01	; 1
 3aa:	91 05       	cpc	r25, r1
 3ac:	49 f1       	breq	.+82     	; 0x400 <Dio_SetPinValue+0x176>
 3ae:	2c 81       	ldd	r18, Y+4	; 0x04
 3b0:	3d 81       	ldd	r19, Y+5	; 0x05
 3b2:	22 30       	cpi	r18, 0x02	; 2
 3b4:	31 05       	cpc	r19, r1
 3b6:	2c f4       	brge	.+10     	; 0x3c2 <Dio_SetPinValue+0x138>
 3b8:	8c 81       	ldd	r24, Y+4	; 0x04
 3ba:	9d 81       	ldd	r25, Y+5	; 0x05
 3bc:	00 97       	sbiw	r24, 0x00	; 0
 3be:	61 f0       	breq	.+24     	; 0x3d8 <Dio_SetPinValue+0x14e>
 3c0:	5a c0       	rjmp	.+180    	; 0x476 <Dio_SetPinValue+0x1ec>
 3c2:	2c 81       	ldd	r18, Y+4	; 0x04
 3c4:	3d 81       	ldd	r19, Y+5	; 0x05
 3c6:	22 30       	cpi	r18, 0x02	; 2
 3c8:	31 05       	cpc	r19, r1
 3ca:	71 f1       	breq	.+92     	; 0x428 <Dio_SetPinValue+0x19e>
 3cc:	8c 81       	ldd	r24, Y+4	; 0x04
 3ce:	9d 81       	ldd	r25, Y+5	; 0x05
 3d0:	83 30       	cpi	r24, 0x03	; 3
 3d2:	91 05       	cpc	r25, r1
 3d4:	e9 f1       	breq	.+122    	; 0x450 <Dio_SetPinValue+0x1c6>
 3d6:	4f c0       	rjmp	.+158    	; 0x476 <Dio_SetPinValue+0x1ec>
			{
			case GroupA: SET_BIT(PORTA, PinNo); break;
 3d8:	ab e3       	ldi	r26, 0x3B	; 59
 3da:	b0 e0       	ldi	r27, 0x00	; 0
 3dc:	eb e3       	ldi	r30, 0x3B	; 59
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	80 81       	ld	r24, Z
 3e2:	48 2f       	mov	r20, r24
 3e4:	8a 81       	ldd	r24, Y+2	; 0x02
 3e6:	28 2f       	mov	r18, r24
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	81 e0       	ldi	r24, 0x01	; 1
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	02 2e       	mov	r0, r18
 3f0:	02 c0       	rjmp	.+4      	; 0x3f6 <Dio_SetPinValue+0x16c>
 3f2:	88 0f       	add	r24, r24
 3f4:	99 1f       	adc	r25, r25
 3f6:	0a 94       	dec	r0
 3f8:	e2 f7       	brpl	.-8      	; 0x3f2 <Dio_SetPinValue+0x168>
 3fa:	84 2b       	or	r24, r20
 3fc:	8c 93       	st	X, r24
 3fe:	3b c0       	rjmp	.+118    	; 0x476 <Dio_SetPinValue+0x1ec>
			case GroupB: SET_BIT(PORTB, PinNo); break;
 400:	a8 e3       	ldi	r26, 0x38	; 56
 402:	b0 e0       	ldi	r27, 0x00	; 0
 404:	e8 e3       	ldi	r30, 0x38	; 56
 406:	f0 e0       	ldi	r31, 0x00	; 0
 408:	80 81       	ld	r24, Z
 40a:	48 2f       	mov	r20, r24
 40c:	8a 81       	ldd	r24, Y+2	; 0x02
 40e:	28 2f       	mov	r18, r24
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	02 2e       	mov	r0, r18
 418:	02 c0       	rjmp	.+4      	; 0x41e <Dio_SetPinValue+0x194>
 41a:	88 0f       	add	r24, r24
 41c:	99 1f       	adc	r25, r25
 41e:	0a 94       	dec	r0
 420:	e2 f7       	brpl	.-8      	; 0x41a <Dio_SetPinValue+0x190>
 422:	84 2b       	or	r24, r20
 424:	8c 93       	st	X, r24
 426:	27 c0       	rjmp	.+78     	; 0x476 <Dio_SetPinValue+0x1ec>
			case GroupC: SET_BIT(PORTC, PinNo); break;
 428:	a5 e3       	ldi	r26, 0x35	; 53
 42a:	b0 e0       	ldi	r27, 0x00	; 0
 42c:	e5 e3       	ldi	r30, 0x35	; 53
 42e:	f0 e0       	ldi	r31, 0x00	; 0
 430:	80 81       	ld	r24, Z
 432:	48 2f       	mov	r20, r24
 434:	8a 81       	ldd	r24, Y+2	; 0x02
 436:	28 2f       	mov	r18, r24
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	81 e0       	ldi	r24, 0x01	; 1
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	02 2e       	mov	r0, r18
 440:	02 c0       	rjmp	.+4      	; 0x446 <Dio_SetPinValue+0x1bc>
 442:	88 0f       	add	r24, r24
 444:	99 1f       	adc	r25, r25
 446:	0a 94       	dec	r0
 448:	e2 f7       	brpl	.-8      	; 0x442 <Dio_SetPinValue+0x1b8>
 44a:	84 2b       	or	r24, r20
 44c:	8c 93       	st	X, r24
 44e:	13 c0       	rjmp	.+38     	; 0x476 <Dio_SetPinValue+0x1ec>
			case GroupD: SET_BIT(PORTD, PinNo); break;
 450:	a2 e3       	ldi	r26, 0x32	; 50
 452:	b0 e0       	ldi	r27, 0x00	; 0
 454:	e2 e3       	ldi	r30, 0x32	; 50
 456:	f0 e0       	ldi	r31, 0x00	; 0
 458:	80 81       	ld	r24, Z
 45a:	48 2f       	mov	r20, r24
 45c:	8a 81       	ldd	r24, Y+2	; 0x02
 45e:	28 2f       	mov	r18, r24
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	02 2e       	mov	r0, r18
 468:	02 c0       	rjmp	.+4      	; 0x46e <Dio_SetPinValue+0x1e4>
 46a:	88 0f       	add	r24, r24
 46c:	99 1f       	adc	r25, r25
 46e:	0a 94       	dec	r0
 470:	e2 f7       	brpl	.-8      	; 0x46a <Dio_SetPinValue+0x1e0>
 472:	84 2b       	or	r24, r20
 474:	8c 93       	st	X, r24
			}
		}
}
 476:	27 96       	adiw	r28, 0x07	; 7
 478:	0f b6       	in	r0, 0x3f	; 63
 47a:	f8 94       	cli
 47c:	de bf       	out	0x3e, r29	; 62
 47e:	0f be       	out	0x3f, r0	; 63
 480:	cd bf       	out	0x3d, r28	; 61
 482:	cf 91       	pop	r28
 484:	df 91       	pop	r29
 486:	08 95       	ret

00000488 <Dio_GetPinValue>:
u8 Dio_GetPinValue(u8 GroupNo, u8 PinNo)
{
 488:	df 93       	push	r29
 48a:	cf 93       	push	r28
 48c:	00 d0       	rcall	.+0      	; 0x48e <Dio_GetPinValue+0x6>
 48e:	00 d0       	rcall	.+0      	; 0x490 <Dio_GetPinValue+0x8>
 490:	0f 92       	push	r0
 492:	cd b7       	in	r28, 0x3d	; 61
 494:	de b7       	in	r29, 0x3e	; 62
 496:	8a 83       	std	Y+2, r24	; 0x02
 498:	6b 83       	std	Y+3, r22	; 0x03
	u8 ret_value;
	switch(GroupNo)
 49a:	8a 81       	ldd	r24, Y+2	; 0x02
 49c:	28 2f       	mov	r18, r24
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	3d 83       	std	Y+5, r19	; 0x05
 4a2:	2c 83       	std	Y+4, r18	; 0x04
 4a4:	4c 81       	ldd	r20, Y+4	; 0x04
 4a6:	5d 81       	ldd	r21, Y+5	; 0x05
 4a8:	41 30       	cpi	r20, 0x01	; 1
 4aa:	51 05       	cpc	r21, r1
 4ac:	41 f1       	breq	.+80     	; 0x4fe <Dio_GetPinValue+0x76>
 4ae:	8c 81       	ldd	r24, Y+4	; 0x04
 4b0:	9d 81       	ldd	r25, Y+5	; 0x05
 4b2:	82 30       	cpi	r24, 0x02	; 2
 4b4:	91 05       	cpc	r25, r1
 4b6:	34 f4       	brge	.+12     	; 0x4c4 <Dio_GetPinValue+0x3c>
 4b8:	2c 81       	ldd	r18, Y+4	; 0x04
 4ba:	3d 81       	ldd	r19, Y+5	; 0x05
 4bc:	21 15       	cp	r18, r1
 4be:	31 05       	cpc	r19, r1
 4c0:	61 f0       	breq	.+24     	; 0x4da <Dio_GetPinValue+0x52>
 4c2:	52 c0       	rjmp	.+164    	; 0x568 <Dio_GetPinValue+0xe0>
 4c4:	4c 81       	ldd	r20, Y+4	; 0x04
 4c6:	5d 81       	ldd	r21, Y+5	; 0x05
 4c8:	42 30       	cpi	r20, 0x02	; 2
 4ca:	51 05       	cpc	r21, r1
 4cc:	51 f1       	breq	.+84     	; 0x522 <Dio_GetPinValue+0x9a>
 4ce:	8c 81       	ldd	r24, Y+4	; 0x04
 4d0:	9d 81       	ldd	r25, Y+5	; 0x05
 4d2:	83 30       	cpi	r24, 0x03	; 3
 4d4:	91 05       	cpc	r25, r1
 4d6:	b9 f1       	breq	.+110    	; 0x546 <Dio_GetPinValue+0xbe>
 4d8:	47 c0       	rjmp	.+142    	; 0x568 <Dio_GetPinValue+0xe0>
	{
	case GroupA: ret_value=GET_BIT(PINA, PinNo); break;
 4da:	e9 e3       	ldi	r30, 0x39	; 57
 4dc:	f0 e0       	ldi	r31, 0x00	; 0
 4de:	80 81       	ld	r24, Z
 4e0:	28 2f       	mov	r18, r24
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	8b 81       	ldd	r24, Y+3	; 0x03
 4e6:	88 2f       	mov	r24, r24
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	a9 01       	movw	r20, r18
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <Dio_GetPinValue+0x6a>
 4ee:	55 95       	asr	r21
 4f0:	47 95       	ror	r20
 4f2:	8a 95       	dec	r24
 4f4:	e2 f7       	brpl	.-8      	; 0x4ee <Dio_GetPinValue+0x66>
 4f6:	ca 01       	movw	r24, r20
 4f8:	81 70       	andi	r24, 0x01	; 1
 4fa:	89 83       	std	Y+1, r24	; 0x01
 4fc:	35 c0       	rjmp	.+106    	; 0x568 <Dio_GetPinValue+0xe0>
	case GroupB: ret_value=GET_BIT(PINB, PinNo); break;
 4fe:	e6 e3       	ldi	r30, 0x36	; 54
 500:	f0 e0       	ldi	r31, 0x00	; 0
 502:	80 81       	ld	r24, Z
 504:	28 2f       	mov	r18, r24
 506:	30 e0       	ldi	r19, 0x00	; 0
 508:	8b 81       	ldd	r24, Y+3	; 0x03
 50a:	88 2f       	mov	r24, r24
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	a9 01       	movw	r20, r18
 510:	02 c0       	rjmp	.+4      	; 0x516 <Dio_GetPinValue+0x8e>
 512:	55 95       	asr	r21
 514:	47 95       	ror	r20
 516:	8a 95       	dec	r24
 518:	e2 f7       	brpl	.-8      	; 0x512 <Dio_GetPinValue+0x8a>
 51a:	ca 01       	movw	r24, r20
 51c:	81 70       	andi	r24, 0x01	; 1
 51e:	89 83       	std	Y+1, r24	; 0x01
 520:	23 c0       	rjmp	.+70     	; 0x568 <Dio_GetPinValue+0xe0>
	case GroupC: ret_value=GET_BIT(PINC, PinNo); break;
 522:	e3 e3       	ldi	r30, 0x33	; 51
 524:	f0 e0       	ldi	r31, 0x00	; 0
 526:	80 81       	ld	r24, Z
 528:	28 2f       	mov	r18, r24
 52a:	30 e0       	ldi	r19, 0x00	; 0
 52c:	8b 81       	ldd	r24, Y+3	; 0x03
 52e:	88 2f       	mov	r24, r24
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	a9 01       	movw	r20, r18
 534:	02 c0       	rjmp	.+4      	; 0x53a <Dio_GetPinValue+0xb2>
 536:	55 95       	asr	r21
 538:	47 95       	ror	r20
 53a:	8a 95       	dec	r24
 53c:	e2 f7       	brpl	.-8      	; 0x536 <Dio_GetPinValue+0xae>
 53e:	ca 01       	movw	r24, r20
 540:	81 70       	andi	r24, 0x01	; 1
 542:	89 83       	std	Y+1, r24	; 0x01
 544:	11 c0       	rjmp	.+34     	; 0x568 <Dio_GetPinValue+0xe0>
	case GroupD: ret_value=GET_BIT(PIND, PinNo); break;
 546:	e0 e3       	ldi	r30, 0x30	; 48
 548:	f0 e0       	ldi	r31, 0x00	; 0
 54a:	80 81       	ld	r24, Z
 54c:	28 2f       	mov	r18, r24
 54e:	30 e0       	ldi	r19, 0x00	; 0
 550:	8b 81       	ldd	r24, Y+3	; 0x03
 552:	88 2f       	mov	r24, r24
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	a9 01       	movw	r20, r18
 558:	02 c0       	rjmp	.+4      	; 0x55e <Dio_GetPinValue+0xd6>
 55a:	55 95       	asr	r21
 55c:	47 95       	ror	r20
 55e:	8a 95       	dec	r24
 560:	e2 f7       	brpl	.-8      	; 0x55a <Dio_GetPinValue+0xd2>
 562:	ca 01       	movw	r24, r20
 564:	81 70       	andi	r24, 0x01	; 1
 566:	89 83       	std	Y+1, r24	; 0x01
	}

return ret_value;
 568:	89 81       	ldd	r24, Y+1	; 0x01
}
 56a:	0f 90       	pop	r0
 56c:	0f 90       	pop	r0
 56e:	0f 90       	pop	r0
 570:	0f 90       	pop	r0
 572:	0f 90       	pop	r0
 574:	cf 91       	pop	r28
 576:	df 91       	pop	r29
 578:	08 95       	ret

0000057a <LED0_INIT>:
#include "Dio_Int.h"
#include "Dio_Reg.h"
#include "Utilities.h"
#include  "Led_INT.h"

void LED0_INIT() {
 57a:	df 93       	push	r29
 57c:	cf 93       	push	r28
 57e:	cd b7       	in	r28, 0x3d	; 61
 580:	de b7       	in	r29, 0x3e	; 62
	Dio_SetPinDirection(GroupC, PIN2, OUTPUT);
 582:	82 e0       	ldi	r24, 0x02	; 2
 584:	62 e0       	ldi	r22, 0x02	; 2
 586:	41 e0       	ldi	r20, 0x01	; 1
 588:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_SetPinDirection>
}
 58c:	cf 91       	pop	r28
 58e:	df 91       	pop	r29
 590:	08 95       	ret

00000592 <LED1_INIT>:
void LED1_INIT()  {
 592:	df 93       	push	r29
 594:	cf 93       	push	r28
 596:	cd b7       	in	r28, 0x3d	; 61
 598:	de b7       	in	r29, 0x3e	; 62
	Dio_SetPinDirection(GroupC, PIN7, OUTPUT);
 59a:	82 e0       	ldi	r24, 0x02	; 2
 59c:	67 e0       	ldi	r22, 0x07	; 7
 59e:	41 e0       	ldi	r20, 0x01	; 1
 5a0:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_SetPinDirection>
}
 5a4:	cf 91       	pop	r28
 5a6:	df 91       	pop	r29
 5a8:	08 95       	ret

000005aa <LED2_INIT>:
void LED2_INIT() {
 5aa:	df 93       	push	r29
 5ac:	cf 93       	push	r28
 5ae:	cd b7       	in	r28, 0x3d	; 61
 5b0:	de b7       	in	r29, 0x3e	; 62
	Dio_SetPinDirection(GroupD, PIN3, OUTPUT);
 5b2:	83 e0       	ldi	r24, 0x03	; 3
 5b4:	63 e0       	ldi	r22, 0x03	; 3
 5b6:	41 e0       	ldi	r20, 0x01	; 1
 5b8:	0e 94 3e 00 	call	0x7c	; 0x7c <Dio_SetPinDirection>
}
 5bc:	cf 91       	pop	r28
 5be:	df 91       	pop	r29
 5c0:	08 95       	ret

000005c2 <LED_ON>:

void LED_ON(u8 LedNo) {
 5c2:	df 93       	push	r29
 5c4:	cf 93       	push	r28
 5c6:	00 d0       	rcall	.+0      	; 0x5c8 <LED_ON+0x6>
 5c8:	0f 92       	push	r0
 5ca:	cd b7       	in	r28, 0x3d	; 61
 5cc:	de b7       	in	r29, 0x3e	; 62
 5ce:	89 83       	std	Y+1, r24	; 0x01

	switch (LedNo) {
 5d0:	89 81       	ldd	r24, Y+1	; 0x01
 5d2:	28 2f       	mov	r18, r24
 5d4:	30 e0       	ldi	r19, 0x00	; 0
 5d6:	3b 83       	std	Y+3, r19	; 0x03
 5d8:	2a 83       	std	Y+2, r18	; 0x02
 5da:	8a 81       	ldd	r24, Y+2	; 0x02
 5dc:	9b 81       	ldd	r25, Y+3	; 0x03
 5de:	81 30       	cpi	r24, 0x01	; 1
 5e0:	91 05       	cpc	r25, r1
 5e2:	79 f0       	breq	.+30     	; 0x602 <LED_ON+0x40>
 5e4:	2a 81       	ldd	r18, Y+2	; 0x02
 5e6:	3b 81       	ldd	r19, Y+3	; 0x03
 5e8:	22 30       	cpi	r18, 0x02	; 2
 5ea:	31 05       	cpc	r19, r1
 5ec:	81 f0       	breq	.+32     	; 0x60e <LED_ON+0x4c>
 5ee:	8a 81       	ldd	r24, Y+2	; 0x02
 5f0:	9b 81       	ldd	r25, Y+3	; 0x03
 5f2:	00 97       	sbiw	r24, 0x00	; 0
 5f4:	89 f4       	brne	.+34     	; 0x618 <LED_ON+0x56>
	case LED0: Dio_SetPinValue(GroupC, PIN2, HIGH);
 5f6:	82 e0       	ldi	r24, 0x02	; 2
 5f8:	62 e0       	ldi	r22, 0x02	; 2
 5fa:	41 e0       	ldi	r20, 0x01	; 1
 5fc:	0e 94 45 01 	call	0x28a	; 0x28a <Dio_SetPinValue>
 600:	0b c0       	rjmp	.+22     	; 0x618 <LED_ON+0x56>
		break;
	case LED1: Dio_SetPinValue(GroupC, PIN7, HIGH);
 602:	82 e0       	ldi	r24, 0x02	; 2
 604:	67 e0       	ldi	r22, 0x07	; 7
 606:	41 e0       	ldi	r20, 0x01	; 1
 608:	0e 94 45 01 	call	0x28a	; 0x28a <Dio_SetPinValue>
 60c:	05 c0       	rjmp	.+10     	; 0x618 <LED_ON+0x56>
		break;
	case LED2: Dio_SetPinValue(GroupD, PIN3, HIGH);
 60e:	83 e0       	ldi	r24, 0x03	; 3
 610:	63 e0       	ldi	r22, 0x03	; 3
 612:	41 e0       	ldi	r20, 0x01	; 1
 614:	0e 94 45 01 	call	0x28a	; 0x28a <Dio_SetPinValue>
		break;
	}

}
 618:	0f 90       	pop	r0
 61a:	0f 90       	pop	r0
 61c:	0f 90       	pop	r0
 61e:	cf 91       	pop	r28
 620:	df 91       	pop	r29
 622:	08 95       	ret

00000624 <LED_OFF>:
void LED_OFF(u8 LedNo)  {
 624:	df 93       	push	r29
 626:	cf 93       	push	r28
 628:	00 d0       	rcall	.+0      	; 0x62a <LED_OFF+0x6>
 62a:	0f 92       	push	r0
 62c:	cd b7       	in	r28, 0x3d	; 61
 62e:	de b7       	in	r29, 0x3e	; 62
 630:	89 83       	std	Y+1, r24	; 0x01
	switch (LedNo) {
 632:	89 81       	ldd	r24, Y+1	; 0x01
 634:	28 2f       	mov	r18, r24
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	3b 83       	std	Y+3, r19	; 0x03
 63a:	2a 83       	std	Y+2, r18	; 0x02
 63c:	8a 81       	ldd	r24, Y+2	; 0x02
 63e:	9b 81       	ldd	r25, Y+3	; 0x03
 640:	81 30       	cpi	r24, 0x01	; 1
 642:	91 05       	cpc	r25, r1
 644:	79 f0       	breq	.+30     	; 0x664 <LED_OFF+0x40>
 646:	2a 81       	ldd	r18, Y+2	; 0x02
 648:	3b 81       	ldd	r19, Y+3	; 0x03
 64a:	22 30       	cpi	r18, 0x02	; 2
 64c:	31 05       	cpc	r19, r1
 64e:	81 f0       	breq	.+32     	; 0x670 <LED_OFF+0x4c>
 650:	8a 81       	ldd	r24, Y+2	; 0x02
 652:	9b 81       	ldd	r25, Y+3	; 0x03
 654:	00 97       	sbiw	r24, 0x00	; 0
 656:	89 f4       	brne	.+34     	; 0x67a <LED_OFF+0x56>
	case LED0: Dio_SetPinValue(GroupC, PIN2, LOW);
 658:	82 e0       	ldi	r24, 0x02	; 2
 65a:	62 e0       	ldi	r22, 0x02	; 2
 65c:	40 e0       	ldi	r20, 0x00	; 0
 65e:	0e 94 45 01 	call	0x28a	; 0x28a <Dio_SetPinValue>
 662:	0b c0       	rjmp	.+22     	; 0x67a <LED_OFF+0x56>
	break;
	case LED1: Dio_SetPinValue(GroupC, PIN7, LOW);
 664:	82 e0       	ldi	r24, 0x02	; 2
 666:	67 e0       	ldi	r22, 0x07	; 7
 668:	40 e0       	ldi	r20, 0x00	; 0
 66a:	0e 94 45 01 	call	0x28a	; 0x28a <Dio_SetPinValue>
 66e:	05 c0       	rjmp	.+10     	; 0x67a <LED_OFF+0x56>
	break;
	case LED2: Dio_SetPinValue(GroupD, PIN3, LOW);
 670:	83 e0       	ldi	r24, 0x03	; 3
 672:	63 e0       	ldi	r22, 0x03	; 3
 674:	40 e0       	ldi	r20, 0x00	; 0
 676:	0e 94 45 01 	call	0x28a	; 0x28a <Dio_SetPinValue>
	break;
	}

}
 67a:	0f 90       	pop	r0
 67c:	0f 90       	pop	r0
 67e:	0f 90       	pop	r0
 680:	cf 91       	pop	r28
 682:	df 91       	pop	r29
 684:	08 95       	ret

00000686 <Timer0_INIT>:
#include "Utilities.h"
#include "avr/interrupt.h"

u16 counter = 0;

void Timer0_INIT(void)  {
 686:	df 93       	push	r29
 688:	cf 93       	push	r28
 68a:	cd b7       	in	r28, 0x3d	; 61
 68c:	de b7       	in	r29, 0x3e	; 62

	// enable global  interrupt
	SET_BIT(SREG, 7);
 68e:	af e5       	ldi	r26, 0x5F	; 95
 690:	b0 e0       	ldi	r27, 0x00	; 0
 692:	ef e5       	ldi	r30, 0x5F	; 95
 694:	f0 e0       	ldi	r31, 0x00	; 0
 696:	80 81       	ld	r24, Z
 698:	80 68       	ori	r24, 0x80	; 128
 69a:	8c 93       	st	X, r24

	// normal mode
	CLR_BIT(TCCR0, 3);
 69c:	a3 e5       	ldi	r26, 0x53	; 83
 69e:	b0 e0       	ldi	r27, 0x00	; 0
 6a0:	e3 e5       	ldi	r30, 0x53	; 83
 6a2:	f0 e0       	ldi	r31, 0x00	; 0
 6a4:	80 81       	ld	r24, Z
 6a6:	87 7f       	andi	r24, 0xF7	; 247
 6a8:	8c 93       	st	X, r24
	CLR_BIT(TCCR0, 6);
 6aa:	a3 e5       	ldi	r26, 0x53	; 83
 6ac:	b0 e0       	ldi	r27, 0x00	; 0
 6ae:	e3 e5       	ldi	r30, 0x53	; 83
 6b0:	f0 e0       	ldi	r31, 0x00	; 0
 6b2:	80 81       	ld	r24, Z
 6b4:	8f 7b       	andi	r24, 0xBF	; 191
 6b6:	8c 93       	st	X, r24

	// prescaler 64
	SET_BIT(TCCR0, 0);
 6b8:	a3 e5       	ldi	r26, 0x53	; 83
 6ba:	b0 e0       	ldi	r27, 0x00	; 0
 6bc:	e3 e5       	ldi	r30, 0x53	; 83
 6be:	f0 e0       	ldi	r31, 0x00	; 0
 6c0:	80 81       	ld	r24, Z
 6c2:	81 60       	ori	r24, 0x01	; 1
 6c4:	8c 93       	st	X, r24
	SET_BIT(TCCR0, 1);
 6c6:	a3 e5       	ldi	r26, 0x53	; 83
 6c8:	b0 e0       	ldi	r27, 0x00	; 0
 6ca:	e3 e5       	ldi	r30, 0x53	; 83
 6cc:	f0 e0       	ldi	r31, 0x00	; 0
 6ce:	80 81       	ld	r24, Z
 6d0:	82 60       	ori	r24, 0x02	; 2
 6d2:	8c 93       	st	X, r24
	SET_BIT(TCCR0, 2);
 6d4:	a3 e5       	ldi	r26, 0x53	; 83
 6d6:	b0 e0       	ldi	r27, 0x00	; 0
 6d8:	e3 e5       	ldi	r30, 0x53	; 83
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	80 81       	ld	r24, Z
 6de:	84 60       	ori	r24, 0x04	; 4
 6e0:	8c 93       	st	X, r24

	// set init value for tcnt0
	TCNT0 = 250; // num of counts =m 256 - 250
 6e2:	e2 e5       	ldi	r30, 0x52	; 82
 6e4:	f0 e0       	ldi	r31, 0x00	; 0
 6e6:	8a ef       	ldi	r24, 0xFA	; 250
 6e8:	80 83       	st	Z, r24

	// PIE
	SET_BIT(TIMSK, 0);
 6ea:	a9 e5       	ldi	r26, 0x59	; 89
 6ec:	b0 e0       	ldi	r27, 0x00	; 0
 6ee:	e9 e5       	ldi	r30, 0x59	; 89
 6f0:	f0 e0       	ldi	r31, 0x00	; 0
 6f2:	80 81       	ld	r24, Z
 6f4:	81 60       	ori	r24, 0x01	; 1
 6f6:	8c 93       	st	X, r24

	// led2
	LED2_INIT();
 6f8:	0e 94 d5 02 	call	0x5aa	; 0x5aa <LED2_INIT>
}
 6fc:	cf 91       	pop	r28
 6fe:	df 91       	pop	r29
 700:	08 95       	ret

00000702 <__vector_11>:

ISR( TIMER0_OVF_vect) {
 702:	1f 92       	push	r1
 704:	0f 92       	push	r0
 706:	0f b6       	in	r0, 0x3f	; 63
 708:	0f 92       	push	r0
 70a:	11 24       	eor	r1, r1
 70c:	8f 93       	push	r24
 70e:	9f 93       	push	r25
 710:	af 93       	push	r26
 712:	bf 93       	push	r27
 714:	ef 93       	push	r30
 716:	ff 93       	push	r31
 718:	df 93       	push	r29
 71a:	cf 93       	push	r28
 71c:	cd b7       	in	r28, 0x3d	; 61
 71e:	de b7       	in	r29, 0x3e	; 62

	counter++;
 720:	80 91 60 00 	lds	r24, 0x0060
 724:	90 91 61 00 	lds	r25, 0x0061
 728:	01 96       	adiw	r24, 0x01	; 1
 72a:	90 93 61 00 	sts	0x0061, r25
 72e:	80 93 60 00 	sts	0x0060, r24

	if (counter == 1) {
 732:	80 91 60 00 	lds	r24, 0x0060
 736:	90 91 61 00 	lds	r25, 0x0061
 73a:	81 30       	cpi	r24, 0x01	; 1
 73c:	91 05       	cpc	r25, r1
 73e:	81 f4       	brne	.+32     	; 0x760 <__vector_11+0x5e>
		counter = 0;
 740:	10 92 61 00 	sts	0x0061, r1
 744:	10 92 60 00 	sts	0x0060, r1
		TOGGLE_BIT(PORTD, PIN3);
 748:	a2 e3       	ldi	r26, 0x32	; 50
 74a:	b0 e0       	ldi	r27, 0x00	; 0
 74c:	e2 e3       	ldi	r30, 0x32	; 50
 74e:	f0 e0       	ldi	r31, 0x00	; 0
 750:	90 81       	ld	r25, Z
 752:	88 e0       	ldi	r24, 0x08	; 8
 754:	89 27       	eor	r24, r25
 756:	8c 93       	st	X, r24
		TCNT0 = 250;
 758:	e2 e5       	ldi	r30, 0x52	; 82
 75a:	f0 e0       	ldi	r31, 0x00	; 0
 75c:	8a ef       	ldi	r24, 0xFA	; 250
 75e:	80 83       	st	Z, r24
	}
}
 760:	cf 91       	pop	r28
 762:	df 91       	pop	r29
 764:	ff 91       	pop	r31
 766:	ef 91       	pop	r30
 768:	bf 91       	pop	r27
 76a:	af 91       	pop	r26
 76c:	9f 91       	pop	r25
 76e:	8f 91       	pop	r24
 770:	0f 90       	pop	r0
 772:	0f be       	out	0x3f, r0	; 63
 774:	0f 90       	pop	r0
 776:	1f 90       	pop	r1
 778:	18 95       	reti

0000077a <main>:
#include "TIMER0_INIT.h"

int main(void) {
 77a:	df 93       	push	r29
 77c:	cf 93       	push	r28
 77e:	cd b7       	in	r28, 0x3d	; 61
 780:	de b7       	in	r29, 0x3e	; 62

	Timer0_INIT();
 782:	0e 94 43 03 	call	0x686	; 0x686 <Timer0_INIT>
 786:	ff cf       	rjmp	.-2      	; 0x786 <main+0xc>

00000788 <_exit>:
 788:	f8 94       	cli

0000078a <__stop_program>:
 78a:	ff cf       	rjmp	.-2      	; 0x78a <__stop_program>
